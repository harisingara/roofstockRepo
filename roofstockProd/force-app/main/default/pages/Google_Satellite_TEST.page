<apex:page standardController="Property__c">
<apex:pageBlock >
<head>
 
<script type="text/javascript" src="https://maps.google.com/maps/api/js?key=AIzaSyBpnAv-LOEfm7Mmfgk4B03i0GuBQ8CQD4A&sensor=false"></script>
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js"></script>
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css"/>
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
  <script src="/soap/ajax/10.0/connection.js"> </script >
  <script src="/soap/ajax/10.0/apex.js"> </script >
 
<script type="text/javascript">

let map;
let marker;
let service;
let infowindow;
let markers = [];
let markers_hide = [];
let bedroom = [];
let bedroom_hide = [];
let bathroom = [];
let bathroom_hide = [];
let Main_property = [];

 
$(document).ready(function() {
 
  var myOptions = {
    zoom: 12,
    mapTypeId: google.maps.MapTypeId.ROADMAP,
    mapTypeControl: true
  }
 
 
 
  var geocoder = new google.maps.Geocoder();
  var address = "Property__c[], " + "{!Property__c.City__c}, " + "{!Property__c.Zipcode__c}";
 
  var infowindow = new google.maps.InfoWindow({
    content: "<b>{!Property__c.Name}</b>"
  });
 
  geocoder.geocode( { address: address}, function(results, status) {
    if (status == google.maps.GeocoderStatus.OK && results.length) {
      if (status != google.maps.GeocoderStatus.ZERO_RESULTS) {
     
        //create map
        map = new google.maps.Map(document.getElementById("map"), myOptions);
     
        //center map
        map.setCenter(results[0].geometry.location);
       
        //create marker
        marker = new google.maps.Marker({
            position: results[0].geometry.location,
            map: map,
            title: "{!Property__c.Name}",
        });
        Main_property.push(marker);

       
       
        ////////////////////////////////////////
       
       
        // 1-  Get Properties in SOQL (properties with latitude and longitude)
                
          //     latitude 1 degré = 69 miles            : prendre +-0.1  
          //     longitude i degré = 69 miles x cos()    : prendre +-0.1
       
       
        const latMin = {!Property__c.Geolocation__Latitude__s}-0.1;
        const latMax = {!Property__c.Geolocation__Latitude__s}+0.1;
        const lngMin = {!Property__c.Geolocation__Longitude__s}-0.1;
        const lngMax = {!Property__c.Geolocation__Longitude__s}+0.1;
       
       
       
        // SOQL query
        sforce.connection.sessionId = '{!$Api.Session_ID}';
        var query = "SELECT Name, Id,Bedrooms__c, Bathrooms__c,  Geolocation__Latitude__s, Geolocation__Longitude__s, City__c, Zipcode__c from Property__c  Where (Geolocation__Latitude__s != null) AND (Geolocation__Latitude__s != null) AND (Geolocation__Latitude__s > " + latMin + "  )AND (Geolocation__Latitude__s < "  +latMax + " ) AND (Geolocation__Longitude__s> " + lngMin + " )AND (Geolocation__Longitude__s< " + lngMax + " ) LIMIT 50";
        var records = sforce.connection.query(query);
        var records1 = records.getArray('records');
        console.log(records1 );
       
       
         
         
         //2 - get eack marker for the array
         
         addCompMarkers(records1 );
   



     
     
       
        // add listeners
       
        google.maps.event.addListener(marker, 'click', function() {
          infowindow.open(map,marker);
        });
       
        google.maps.event.addListener(infowindow, 'closeclick', function() {
          map.setCenter(marker.getPosition());
        });
       
      }
     
    } else {
      $('#map').css({'height' : '15px'});
      $('#map').html("Oops! {!Property__c.Name}'s address could not be found, please make sure the address is correct.");
      resizeIframe();
    }
  });
 
  function resizeIframe() {
    var me = window.name;
    if (me) {
      var iframes = parent.document.getElementsByName(me);
      if (iframes && iframes.length == 1) {
        height = document.body.offsetHeight;
        iframes[0].style.height = height + "px";
      }
    }
  }
 
});










function set_property_marker(lat, lng) {
  const property_location = new google.maps.LatLng(lat, lng);
  deleteMarkers();
  addPropertyMarker(property_location);
}




// Adds a marker to the map and push to the array.
function addCompMarker(location) {
  const marker = new google.maps.Marker({
    position: location,
    map: map,
    icon: {url: "http://maps.google.com/mapfiles/ms/icons/green-dot.png"}
  });
  markers.push(marker);
}
function addPropertyMarker(location) {
  const marker = new google.maps.Marker({
    position: location,
    map: map,
  });
  Main_property.push(marker);
}

// Sets the map on all markers in the array.
function setMapOnAll(map) {
  for (let i = 0; i < markers.length; i++) {
    markers[i].setMap(map);
  }
}

// Removes the markers from the map, but keeps them in the array.
function clearMarkers() {
  setMapOnAll(null);
}

// Shows any markers currently in the array.
function showMarkers() {
  setMapOnAll(map);
}

// Deletes all markers in the array by removing references to them.
function deleteMarkers() {
  clearMarkers();
  markers = [];
}

function mergeMarkers(markers_visible, markers_hide, bedroom_visible, bedroom_hide, bathroom_visible, bathroom_hide) {
  for (let i = 0; i < markers_hide.length; i++) {
    markers_visible.push(markers_hide[i]);
    bedroom_visible.push(bedroom_hide[i]);
    bathroom_visible.push(bathroom_hide[i]);
  }
}

function addCompMarkers(properties) {

  for (let i = 0; i < properties.length; i++) {      
 
  infoContent =  "<h4> "+properties[i].Name+"  </h4> <div><br>Bedrooms : "+properties[i].Bedrooms__c+ "<br>Bathrooms: "+properties[i].Bathrooms__c+"</div> <div><br> <a href=\"https://roofstock.lightning.force.com/lightning/r/Property__c/"+ properties[i].Id + "/view\">Click here to see property details </a></div>";
   const infowindow = new google.maps.InfoWindow({
    content: infoContent ,
  });
 
 
 
       var myLatLng = { lat: Number(properties[i].Geolocation__Latitude__s), lng: Number(properties[i].Geolocation__Longitude__s) };
      const marker = new google.maps.Marker({
        position: myLatLng,
        map: map,
        icon: {url: "http://maps.google.com/mapfiles/ms/icons/green-dot.png"}
      });
     
           marker.addListener("click", () => {
          // hideAllInfoWindows(map);
        infowindow.open(map, marker);
      });
 
      markers.push(marker);  
      
      bedroom.push(properties[i].Bedrooms__c);
      bathroom.push(properties[i].Bathrooms__c);
  }
}

function hideAllInfoWindows(map) {
   markers.forEach(function(marker) {
     marker.infowindow.close(map, marker);
  });
}



// Converts numeric degrees to radians
function toRad(Value)
    {
        return Value * Math.PI / 180;
    }



function calcCrow(position1, position2 )
    {
     
      var lat1 = position1.getPosition().lat();
      var lon1 = position1.getPosition().lng();
      var lat2 = position2.getPosition().lat();
     var lon2 = position2.getPosition().lng();

        var R = 6371; // km
        var dLat = toRad(lat2-lat1);
        var dLon = toRad(lon2-lon1);
              lat1 = toRad(lat1);
              lat2 = toRad(lat2);
   
        var a = Math.sin(dLat/2) * Math.sin(dLat/2) + Math.sin(dLon/2) *  Math.sin(dLon/2) * Math.cos(lat1) * Math.cos(lat2);
        var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
        var d = R * c;
        var miles = d/1.609;
        return miles;
    }
   
    function applyCompRadius(radius, numbedroom, numbathroom)
    {
        setMapOnAll(null);
        mergeMarkers(markers,markers_hide,bedroom, bedroom_hide,bathroom, bathroom_hide );
        markers_hide  = [];
        bedroom_hide  = [];
        bathroom_hide = [];
        

      for (let i = markers.length -1 ; i >= 0 ; i--) {
        var dist = calcCrow(Main_property[0], markers[i]);
        if (dist > radius||(numbedroom != -1 && bedroom[i] != numbedroom)||(numbathroom != -1 && bathroom[i] != numbathroom)) {
          markers_hide.push(markers[i]);
          markers.splice(i, 1)           
          bedroom_hide.push(bedroom[i]);
          bedroom.splice(i, 1) ;          
          bathroom_hide.push(bathroom[i]);
          bathroom.splice(i, 1) ;          
        }
      }
        showMarkers(map);
       
       
       
    }




</script>
 
<style>
#map {
  font-family: Arial;
  font-size:12px;
  line-height:normal !important;
  height:500px;
  background:transparent;
}
</style>
 
</head>
 
<body>  

  <div id="my_controler" style=" width: 75%">
        <div class="container" style=" margin-top:30px">
  <div class="row">
    <div class="col-sm-12">

              <div class="form-group form-check">
                <input type="checkbox" class="form-check-input" id="myCheck" onclick="Enable_Disable_Comps()"/>
                <label class="form-check-label" for="exampleCheck1">Comps</label>
                <br> </br>  
                <input type="checkbox" class="form-check-input" id="myCheckBed" onclick="Enable_Disable_Comps()"/>
                <label class="form-check-label" for="exampleCheck1">Match Bedrooms</label>                
                <br> </br>  
                <input type="checkbox" class="form-check-input" id="myCheckBath" onclick="Enable_Disable_Comps()"/>
                <label class="form-check-label" for="exampleCheck1">Match Bathrooms</label>
              </div>

            <div class="slidecontainer">
              <input type="range" min="1" max="16" value="8" step="0.1" class="slider" id="myRange"/>
              <p>Radius: <span id="radius" style="font-weight: bold"></span> miles</p>
            </div>

            <br> </br>  

           


        </div>
    </div>
    </div>



    </div>

    <div id="map" style="height:60px, width: 90%">
     
    </div>
   
    <script>
           

            var slider = document.getElementById("myRange");
            var output = document.getElementById("radius");
            var checkBox = document.getElementById("myCheck");
              
            var checkBox_Bed = document.getElementById("myCheckBed");
            var checkBox_Bath = document.getElementById("myCheckBath");
              
              
           
            output.innerHTML = slider.value;
            var bedrooms  = -1;      
            var bathrooms = -1;      
            
            
            if(checkBox_Bed.checked == true){
                bedrooms = {!Property__c.Bedrooms__c};
            } 

            if(checkBox_Bath.checked == true){
                bathrooms = {!Property__c.Bathrooms__c};
            } 

            slider.oninput = function() {
            
                console.log( "je bouge!" );
                console.log( "bathrooms :" + bathroom );
             output.innerHTML = slider.value;
             var radius = output.innerHTML;
             radius = this.value;
              applyCompRadius(radius, bedrooms, bathrooms );
            }
           
            $( document ).ready(function() {
                console.log( "ready!" );
            });
           
           
           
           
            function Enable_Disable_Comps() {
           
            console.log( "OOOOOOO!" );
            
            var slider = document.getElementById("myRange");
            var output = document.getElementById("radius");
            var checkBox = document.getElementById("myCheck");
              
            var checkBox_Bed = document.getElementById("myCheckBed");
            var checkBox_Bath = document.getElementById("myCheckBath");
              
              
           
            output.innerHTML = slider.value;
            var bedrooms = -1;   
            var bathrooms = -1;         
            
            
            if(checkBox_Bed.checked == true){
                bedrooms = {!Property__c.Bedrooms__c};
            } 
            
            if(checkBox_Bath.checked == true){
                bathrooms = {!Property__c.Bathrooms__c};
            } 
            
            applyCompRadius(radius, bedrooms );

            slider.oninput = function() {
            
                console.log( "je bouge!" );
                console.log( "bathroom :" + bathroom );
             output.innerHTML = slider.value;
             var radius = output.innerHTML;
            // radius = this.value;
              applyCompRadius(radius, bedrooms, bathrooms );
            }
            }
                       

            </script>
</body>
</apex:pageBlock>
</apex:page>